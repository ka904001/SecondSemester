/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp: In member function ‘void cl_base::set_connect(void (*)(), cl_base*, void (*)(cl_base*, std::fstream&, std::__cxx11::string))’:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:104:28: error: invalid conversion from ‘void (*)()’ to ‘void (*)(std::__cxx11::string) {aka void (*)(std::__cxx11::basic_string<char>)}’ [-fpermissive]
       p_key = it_connects->first;
               ~~~~~~~~~~~~~^~~~~
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:106:23: error: comparison between distinct pointer types ‘void (*)(std::__cxx11::string) {aka void (*)(std::__cxx11::basic_string<char>)}’ and ‘void (*)()’ lacks a cast [-fpermissive]
       if (((p_key) == p_signal) && (p_value->p_cl_base) == p_ob_hendler &&
                       ^~~~~~~~
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: error: no matching function for call to ‘std::pair<void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::pair(void (*&)(), cl_base::o_sh*&)’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:436:9: note: candidate: template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>)
         pair(tuple<_Args1...>&, tuple<_Args2...>&,
         ^~~~
/usr/include/c++/7/bits/stl_pair.h:436:9: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   mismatched types ‘std::tuple<_Tps ...>’ and ‘void (*)()’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:375:9: note: candidate: template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>)
         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
         ^~~~
/usr/include/c++/7/bits/stl_pair.h:375:9: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   mismatched types ‘std::tuple<_Tps ...>’ and ‘cl_base::o_sh*’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:370:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&)
  explicit constexpr pair(pair<_U1, _U2>&& __p)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:370:21: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   mismatched types ‘std::pair<_T1, _T2>’ and ‘void (*)()’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:360:12: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&)
  constexpr pair(pair<_U1, _U2>&& __p)
            ^~~~
/usr/include/c++/7/bits/stl_pair.h:360:12: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   mismatched types ‘std::pair<_T1, _T2>’ and ‘void (*)()’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:350:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)
  explicit constexpr pair(_U1&& __x, _U2&& __y)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:350:21: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:349:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:349:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:341:12: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)
  constexpr pair(_U1&& __x, _U2&& __y)
            ^~~~
/usr/include/c++/7/bits/stl_pair.h:341:12: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:340:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:340:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:332:17: note: candidate: template<class _U2, typename std::enable_if<_CopyMovePair<false, void (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >), _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&)
        explicit pair(const _T1& __x, _U2&& __y)
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:332:17: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   cannot convert ‘p_signal’ (type ‘void (*)()’) to type ‘void (* const&)(std::__cxx11::basic_string<char>)’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:325:18: note: candidate: template<class _U2, typename std::enable_if<_CopyMovePair<true, void (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >), _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&)
        constexpr pair(const _T1& __x, _U2&& __y)
                  ^~~~
/usr/include/c++/7/bits/stl_pair.h:325:18: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   cannot convert ‘p_signal’ (type ‘void (*)()’) to type ‘void (* const&)(std::__cxx11::basic_string<char>)’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:318:27: note: candidate: template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, cl_base::o_sh*>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&)
        explicit constexpr pair(_U1&& __x, const _T2& __y)
                           ^~~~
/usr/include/c++/7/bits/stl_pair.h:318:27: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:317:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:317:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:311:18: note: candidate: template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, cl_base::o_sh*>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&)
        constexpr pair(_U1&& __x, const _T2& __y)
                  ^~~~
/usr/include/c++/7/bits/stl_pair.h:311:18: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:310:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:310:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:304:17: note: candidate: constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = void (*)(std::__cxx11::basic_string<char>); _T2 = cl_base::o_sh*]
       constexpr pair(pair&&) = default;
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:304:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/stl_pair.h:303:17: note: candidate: constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = void (*)(std::__cxx11::basic_string<char>); _T2 = cl_base::o_sh*]
       constexpr pair(const pair&) = default;
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:303:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/stl_pair.h:300:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&)
  explicit constexpr pair(const pair<_U1, _U2>& __p)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:300:21: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘void (*)()’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:291:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<void (*)(std::__cxx11::basic_string<char>), _U1>::value) || (! std::is_same<cl_base::o_sh*, _U2>::value)), void (*)(std::__cxx11::basic_string<char>), cl_base::o_sh*>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&)
         constexpr pair(const pair<_U1, _U2>& __p)
                   ^~~~
/usr/include/c++/7/bits/stl_pair.h:291:19: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘void (*)()’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:269:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&)
       explicit constexpr pair(const _T1& __a, const _T2& __b)
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:269:26: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   cannot convert ‘p_signal’ (type ‘void (*)()’) to type ‘void (* const&)(std::__cxx11::basic_string<char>)’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:260:17: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&)
       constexpr pair(const _T1& __a, const _T2& __b)
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:260:17: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   cannot convert ‘p_signal’ (type ‘void (*)()’) to type ‘void (* const&)(std::__cxx11::basic_string<char>)’
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:242:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_Tp>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair()
       explicit constexpr pair()
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:242:26: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   candidate expects 0 arguments, 2 provided
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/7/bits/char_traits.h:39,
                 from /usr/include/c++/7/ios:40,
                 from /usr/include/c++/7/istream:38,
                 from /usr/include/c++/7/fstream:38,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.h:1,
                 from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:229:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair()
       _GLIBCXX_CONSTEXPR pair()
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:229:26: note:   template argument deduction/substitution failed:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:115:67: note:   candidate expects 0 arguments, 2 provided
   connects.insert(pair<void (*)(string), o_sh *>(p_signal, p_value));
                                                                   ^
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp: In member function ‘void application::init()’:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:157:69: error: too few arguments to function ‘void hendler(cl_base*, std::fstream&, std::__cxx11::string&)’
   p_set->set_connect((p_set->correct_position()), p_write, (hendler()));
                                                                     ^
In file included from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:0:
/home/aleksandr/Документы/GitHub/new/course/new/lib.h:45:6: note: declared here
 void hendler(cl_base *, fstream &, string &);
      ^~~~~~~
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:157:71: error: invalid use of void expression
   p_set->set_connect((p_set->correct_position()), p_write, (hendler()));
                                                                       ^
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp: In member function ‘void set_position::set(std::fstream&, int, int, std::__cxx11::string)’:
/home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:175:42: error: invalid use of non-static member function ‘void set_position::correct_position()’
     emit_signal(correct_position, file, c);
                                          ^
In file included from /home/aleksandr/Документы/GitHub/new/course/new/lib.cpp:1:0:
/home/aleksandr/Документы/GitHub/new/course/new/lib.h:43:8: note: declared here
   void correct_position();
        ^~~~~~~~~~~~~~~~
